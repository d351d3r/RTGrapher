{
    "sourceFile": "CMakeLists.txt",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1708170653669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708179226511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,53 +8,56 @@\n \n set(CMAKE_CXX_STANDARD 17)\n set(CMAKE_CXX_STANDARD_REQUIRED ON)\n \n-# Enable compiler warnings and address sanitizer for debug builds\n-set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -Wconversion -fsanitize=address,undefined -fno-omit-frame-pointer\")\n-set(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=address,undefined\")\n+set(CMAKE_PREFIX_PATH \"/usr/local/Cellar/qt/6.6.1/\")\n+find_package(Qt NAMES Qt6 Qt5 COMPONENTS Widgets Core REQUIRED)\n+find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets Core REQUIRED)\n \n-find_package(Qt NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets Core)\n-find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Core)\n+# Include directories\n+include_directories(\n+    src/controllers/header\n+    src/models/header\n+    views/header\n+)\n \n-# Organize sources and headers\n-set(PROJECT_SOURCES\n+# Source files\n+set(SOURCES\n     src/main.cpp\n-    src/models/DataGenerator.cpp\n-    src/models/DataGenerator.hpp\n-    src/controllers/DataController.cpp\n-    src/controllers/DataController.hpp\n-    src/views/MainWindow.cpp\n-    src/views/MainWindow.hpp\n-    src/views/GraphWidget.cpp\n-    src/views/GraphWidget.hpp\n-    src/views/ControlPanel.cpp\n-    src/views/ControlPanel.hpp\n-    src/views/ResultWidget.cpp\n-    src/views/ResultWidget.hpp\n+    src/controllers/source/DataController.cpp\n+    src/models/source/datagenerator.cpp\n+    views/source/ControlPanel.cpp\n+    views/source/GraphWidget.cpp\n+    views/source/MainWindow.cpp\n+    views/source/ResultWidget.cpp\n )\n \n-# Optionally, specify UI files and resources if you have them\n-set(PROJECT_UI_FILES\n-    # src/views/your_ui_files.ui\n+# Header files - for IDEs\n+set(HEADERS\n+    src/controllers/header/DataController.hpp\n+    src/models/header/datagenerator.hpp\n+    views/header/ControlPanel.hpp\n+    views/header/GraphWidget.hpp\n+    views/header/MainWindow.hpp\n+    views/header/ResultWidget.hpp\n )\n \n-set(PROJECT_RESOURCES\n-    # resources/your_resources.qrc\n+# Optional: specify resource files\n+set(RESOURCES\n+    src/resources/icons/icons.qrc\n+    src/resources/styles/styles.qrc\n )\n \n-# Include directories\n-include_directories(${PROJECT_SOURCE_DIR}/src)\n+# If you have UI files (Qt Designer .ui files)\n+set(FORMS\n+    # List your .ui files here\n+)\n \n-add_executable(${PROJECT_NAME} ${PROJECT_SOURCES} ${PROJECT_UI_FILES} ${PROJECT_RESOURCES})\n+qt5_wrap_ui(WRAPPED_FORMS ${FORMS})\n \n+add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS} ${WRAPPED_FORMS} ${RESOURCES})\n+\n target_link_libraries(${PROJECT_NAME} Qt${QT_VERSION_MAJOR}::Widgets Qt${QT_VERSION_MAJOR}::Core)\n \n if(QT_VERSION_MAJOR EQUAL 6)\n     qt_finalize_executable(${PROJECT_NAME})\n endif()\n-\n-include(GNUInstallDirs)\n-install(TARGETS ${PROJECT_NAME}\n-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n-)\n"
                },
                {
                    "date": 1708179270610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \n set(CMAKE_CXX_STANDARD 17)\n set(CMAKE_CXX_STANDARD_REQUIRED ON)\n \n-set(CMAKE_PREFIX_PATH \"/usr/local/Cellar/qt/6.6.1/\")\n+set(CMAKE_PREFIX_PATH \"/usr/local/Cellar/qt/6.6.1/bin/qt-cmake?\")\n find_package(Qt NAMES Qt6 Qt5 COMPONENTS Widgets Core REQUIRED)\n find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets Core REQUIRED)\n \n # Include directories\n"
                }
            ],
            "date": 1708170653669,
            "name": "Commit-0",
            "content": "cmake_minimum_required(VERSION 3.14)\n\nproject(RTGrapher LANGUAGES CXX)\n\nset(CMAKE_AUTOUIC ON)\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTORCC ON)\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n\n# Enable compiler warnings and address sanitizer for debug builds\nset(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -Wconversion -fsanitize=address,undefined -fno-omit-frame-pointer\")\nset(CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_LINKER_FLAGS_DEBUG} -fsanitize=address,undefined\")\n\nfind_package(Qt NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets Core)\nfind_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets Core)\n\n# Organize sources and headers\nset(PROJECT_SOURCES\n    src/main.cpp\n    src/models/DataGenerator.cpp\n    src/models/DataGenerator.hpp\n    src/controllers/DataController.cpp\n    src/controllers/DataController.hpp\n    src/views/MainWindow.cpp\n    src/views/MainWindow.hpp\n    src/views/GraphWidget.cpp\n    src/views/GraphWidget.hpp\n    src/views/ControlPanel.cpp\n    src/views/ControlPanel.hpp\n    src/views/ResultWidget.cpp\n    src/views/ResultWidget.hpp\n)\n\n# Optionally, specify UI files and resources if you have them\nset(PROJECT_UI_FILES\n    # src/views/your_ui_files.ui\n)\n\nset(PROJECT_RESOURCES\n    # resources/your_resources.qrc\n)\n\n# Include directories\ninclude_directories(${PROJECT_SOURCE_DIR}/src)\n\nadd_executable(${PROJECT_NAME} ${PROJECT_SOURCES} ${PROJECT_UI_FILES} ${PROJECT_RESOURCES})\n\ntarget_link_libraries(${PROJECT_NAME} Qt${QT_VERSION_MAJOR}::Widgets Qt${QT_VERSION_MAJOR}::Core)\n\nif(QT_VERSION_MAJOR EQUAL 6)\n    qt_finalize_executable(${PROJECT_NAME})\nendif()\n\ninclude(GNUInstallDirs)\ninstall(TARGETS ${PROJECT_NAME}\n    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}\n)\n"
        }
    ]
}